<!DOCTYPE html>
<html lang="en">

  <head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Julianna Alvord</title>

    <!-- Bootstrap core CSS -->
    <link href="vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">

    <!-- Custom fonts for this template -->
    <link href="vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link href='https://fonts.googleapis.com/css?family=Lora:400,700,400italic,700italic' rel='stylesheet' type='text/css'>
    <link href='https://fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,700italic,800italic,400,300,600,700,800' rel='stylesheet' type='text/css'>

    <!-- Custom styles for this template -->
    <link href="css/clean-blog.min.css" rel="stylesheet">

  </head>

  <body>

    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-light fixed-top" id="mainNav">
      <div class="container">
        <a class="navbar-brand" href="index.html">JA</a>
        <button class="navbar-toggler navbar-toggler-right" type="button" data-toggle="collapse" data-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation">
          Menu
          <i class="fas fa-bars"></i>
        </button>
        <div class="collapse navbar-collapse" id="navbarResponsive">
          <ul class="navbar-nav ml-auto">
            <li class="nav-item">
              <a class="nav-link" href="index.html">Home</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="about.html">About Me</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="post.html">Latest Blog Post</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="contact.html">Contact</a>
            </li>
          </ul>
        </div>
      </div>
    </nav>
    
    

    <!-- Page Header -->
    <header class="masthead" style="background-image: url('img/random data.jpg')">
      <div class="overlay"></div>
      <div class="container">
        <div class="row">
          <div class="col-lg-8 col-md-10 mx-auto">
            <div class="post-heading">
              <h1>A Shiny App for Cleaning & Downloading FLASHE Data</h1>
              <!--<h2 class="subheading">Problems look mighty small from 150 miles up</h2> -->
              <span class="meta">Posted by
                <a href="#">Julianna Alvord</a>
                on September 25, 2018</span>
            </div>
          </div>
        </div>
      </div>
    </header>

    <!-- Post Content -->
    <article>
      <div class="container">
        <div class="row">
          <div class="col-lg-8 col-md-10 mx-auto">
            <p>The Family Life, Activity, Sun, Health, and Eating (FLASHE) Study from the National Institute of Health's National Cancer Institute collected survey data on "on psychosocial, generational (parent-adolescent), and environmental correlates of cancer-preventive behaviors." The form of this data is standard dyadic, meaning that each person is linked to one and only one other person in the sample with both having been measured on the same variables. I was introduced to this data by my professor in a intergroup relationship seminar. I mentioned I was interested in health disparities and she thought I might want to analyze the data from this study. However, after finally seeing the data (which was split into 6 files and in the wrong format for dyadic analyses), we jointly decided the task of cleaning and preparing would be too extensive for the 4-credit psychology seminar.</p>
            <p>After the course ended, I was still interested in the data and especially in the challenge of wrangling it. Mostly, I knew that if I saw the cleaning as a challenge, others with less data experience would never have a chance to use the data. I decided to use a summer fellowship to create an online app that would allow users to choose variables and the format which they need for their analyses. This way, I could assist with increasing it's accessibility and the scope of reproducible research using the data.</p>
            <p>I started with the basics- loading the data into R. It was not until then that I saw the extent of cleaning necessary. First, the three datasets for the adolescent data included "T_" at the beginning of most variables, while the variables within the parent datasets started with "P_". In order to fix that, I used the substring function to get rid of the first two characters in the variable name string: </p>
            
<!--begin.rcode
names(parent_diet)[8:110] <- substring(names(parent_diet)[8:110],2)
end.rcode-->

            <p>Many of the variable names were messier and some had to be individually changed using the rename function. Once the cleaning was complete, I joined the three parent datasets together then the three adolescent datasets:</p>
            
<!--begin.rcode
parent_full <- parent_demog %>%
  full_join(parent_diet, by = "PID") %>%
  full_join(parent_pa, by = "PID")
end.rcode-->

            <p>After full parent and teen datasets were created, I used the bind_rows function to stack the two. To complete the transformation from six datasets to one in "individual format", I created a binary variable that distinguished whether the row contained data from a parent or teen. Then, I arranged by "DYADID", which formatted the data to list the pair of one parent and one teen before moving to the next pair. Lastly, the individual identifier (instead of the dyad identifier) was removed in order to later format into dyad and pairwise form.</p>
            
<!--begin.rcode
df_indiv <- df %>%
  mutate(distinguish = ifelse(distinguish == "P", 1, 2)) %>%
  arrange(DYADID) %>%
  select(-PID)
end.rcode-->

          <p>The next task was to format the data in dyad format. The desired result includes the data for both participants in the dyad contained in one row, with each dyad only recieving one row. Basically, the number of columns should double while the number of rows should be approximately 50% smaller.</p>

<!--begin.rcode
df_dyad <- df_indiv %>%
  mutate(distinguish = ifelse(distinguish == 1, "P", "T")) %>%
  gather(variable, value, FOLFAMRUL:WT_P_BOTH_PA) %>%
  unite(var_distinguish, variable, distinguish) %>%
  spread(var_distinguish, value)
end.rcode-->

          <p>Finally, I formatted the data into the third form necessary for dyadic analyses, called pairwise. In this format, the goal is to give each individual a row but with their partner's data attached at the end. Compared to the dyad format, this dataset will contain the same number of columns but double the amount of rows. The logic behind code below is as such: ?</p>
          
<!--begin.rcode
tempA <- df_indiv %>%
  mutate(distinguishE = distinguish, partnum = 1, distinguish = ifelse(distinguish == 1, "A", "P")) %>%
  gather(variable, value, FOLFAMRUL:distinguishE) %>%
  unite(var_distinguish, variable, distinguish) %>%
  spread(var_distinguish, value)

tempB <- df_indiv %>%
  mutate(distinguishE = distinguish, partnum = 2, distinguish = ifelse(distinguish == 1, "P", "A")) %>%
  gather(variable, value, FOLFAMRUL:distinguishE) %>%
  unite(var_distinguish, variable, distinguish) %>%
  spread(var_distinguish, value)

#This is the pairwise df
df_pair <- bind_rows(tempA, tempB) %>%
  arrange(DYADID)
end.rcode-->

          <p>These pieces of code were contained in an rscript that was sourced into the script for the app. The general idea behind the app is that a user can choose the format they want their data to be in then scroll through the variable names to choose the ones they desire. On the right side of the screen, they will see a glimpse of the data. Once they are satisfied, they can download the dataset as a CSV file.</p>
          
          <p>Shiny scripts typically contain two sections: the UI (user interface) and the server. Within the UI is where the format of the app (as well as the types of widgets) is set. The UI is esentially where code To allow users to choose the format they want, I used a function called selectInput, which took three arguments. First is the arbitrary name (in my case "dataset") to be used </p>
            <!--<p>Placeholder text by
             <a href="http://spaceipsum.com/">Space Ipsum</a>. Photographs by
              <a href="https://www.flickr.com/photos/nasacommons/">NASA on The Commons</a>.</p> -->
          </div>
        </div>
      </div>
    </article>

    <hr>

    <!-- Footer -->
    <footer>
      <div class="container">
        <div class="row">
          <div class="col-lg-8 col-md-10 mx-auto">
            <ul class="list-inline text-center">
              <li class="list-inline-item">
                <a href="#">
                  <span class="fa-stack fa-lg">
                    <i class="fas fa-circle fa-stack-2x"></i>
                    <i class="fab fa-twitter fa-stack-1x fa-inverse"></i>
                  </span>
                </a>
              </li>
              <li class="list-inline-item">
                <a href="#">
                  <span class="fa-stack fa-lg">
                    <i class="fas fa-circle fa-stack-2x"></i>
                    <i class="fab fa-facebook-f fa-stack-1x fa-inverse"></i>
                  </span>
                </a>
              </li>
              <li class="list-inline-item">
                <a href="https://github.com/jalvord1">
                  <span class="fa-stack fa-lg">
                    <i class="fas fa-circle fa-stack-2x"></i>
                    <i class="fab fa-github fa-stack-1x fa-inverse"></i>
                  </span>
                </a>
              </li>
            </ul>
            <p class="copyright text-muted">Copyright &copy; JA 2018</p>
          </div>
        </div>
      </div>
    </footer>

    <!-- Bootstrap core JavaScript -->
    <script src="vendor/jquery/jquery.min.js"></script>
    <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

    <!-- Custom scripts for this template -->
    <script src="js/clean-blog.min.js"></script>

  </body>

</html>
